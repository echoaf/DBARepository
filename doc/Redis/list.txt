list

列表(list)类型是用来存储多个有序的字符串, 一个列表最多可以存储2 32 -1个元素
它可以充当栈和队列的角色


两个特点:

    第一、列表中的元素是有序的,这就意味着可以通过索引下标获取某个元素或者某个范围内的元素列表
    第二、列表中的元素可以是重复的


一、shell
    
    添加
        rpush key value [value ...] 
        lpush key value [value ...]
        linsert key before|after pivot value
    查找
        lrange key start end
        lindex key index 
            获取列表指定索引下标的元素
        llen key
            获取列表长度
    删除
        lpop key
            从列表左侧弹出元素
        rpop key
        lrem key count value 
            删除指定元素
        ltrim key start end
            按照索引范围修剪列表
    修改
        lset key index newValue
    阻塞操作
        blpop key [key ...] timeout
        brpop key [key ...] timeout
            0代表一直阻塞
            172.16.112.12:20000> brpop list:test 3
            (nil)
            (3.05s)
            172.16.112.12:20000> brpop list:test 0
    

二、时间复杂度:可能阻塞

    阻塞
        rpush key value ...
        lpush key value ...
        linsert key before|after pivot value
            阻塞pivot距离列表头或尾的元素
        lrange key start end
            阻塞start+end的元素
        lindex key index
        lrem count value
        lset key index value
            索引的偏移量


三、内部编码

    列表类型的内部编码有两种.
        ·ziplist(压缩列表)：当列表的元素个数小于list-max-ziplist-entries配置(默认512个),同时列表中每个元素的值都小于list-max-ziplist-value配置时(默认64字节),Redis会选用ziplist来作为列表的内部实现来减少内存的使用.
        ·linkedlist(链表)：当列表类型无法满足ziplist的条件时,Redis会使用linkedlist作为列表的内部实现
    哈希类型的内部编码有两种：


四、使用场景

    ·lpush+lpop=Stack(栈)
    ·lpush+rpop=Queue(队列)
    ·lpsh+ltrim=Capped Collection(有限集合)
    ·lpush+brpop=Message Queue(消息队列)
